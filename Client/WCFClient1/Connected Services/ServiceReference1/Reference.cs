//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISentenceService")]
    public interface ISentenceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/GetWordCount", ReplyAction="http://tempuri.org/ISentenceService/GetWordCountResponse")]
        string GetWordCount(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/GetWordCount", ReplyAction="http://tempuri.org/ISentenceService/GetWordCountResponse")]
        System.Threading.Tasks.Task<string> GetWordCountAsync(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/IsPalindrom", ReplyAction="http://tempuri.org/ISentenceService/IsPalindromResponse")]
        string IsPalindrom(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/IsPalindrom", ReplyAction="http://tempuri.org/ISentenceService/IsPalindromResponse")]
        System.Threading.Tasks.Task<string> IsPalindromAsync(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/EncodeCaesarCipher", ReplyAction="http://tempuri.org/ISentenceService/EncodeCaesarCipherResponse")]
        string EncodeCaesarCipher(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/EncodeCaesarCipher", ReplyAction="http://tempuri.org/ISentenceService/EncodeCaesarCipherResponse")]
        System.Threading.Tasks.Task<string> EncodeCaesarCipherAsync(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/DecodeCaesarCipher", ReplyAction="http://tempuri.org/ISentenceService/DecodeCaesarCipherResponse")]
        string DecodeCaesarCipher(string sentence, byte[] Key, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentenceService/DecodeCaesarCipher", ReplyAction="http://tempuri.org/ISentenceService/DecodeCaesarCipherResponse")]
        System.Threading.Tasks.Task<string> DecodeCaesarCipherAsync(string sentence, byte[] Key, byte[] IV);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISentenceServiceChannel : WCFClient1.ServiceReference1.ISentenceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SentenceServiceClient : System.ServiceModel.ClientBase<WCFClient1.ServiceReference1.ISentenceService>, WCFClient1.ServiceReference1.ISentenceService {
        
        public SentenceServiceClient() {
        }
        
        public SentenceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SentenceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SentenceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SentenceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWordCount(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.GetWordCount(sentence, Key, IV);
        }
        
        public System.Threading.Tasks.Task<string> GetWordCountAsync(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.GetWordCountAsync(sentence, Key, IV);
        }
        
        public string IsPalindrom(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.IsPalindrom(sentence, Key, IV);
        }
        
        public System.Threading.Tasks.Task<string> IsPalindromAsync(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.IsPalindromAsync(sentence, Key, IV);
        }
        
        public string EncodeCaesarCipher(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.EncodeCaesarCipher(sentence, Key, IV);
        }
        
        public System.Threading.Tasks.Task<string> EncodeCaesarCipherAsync(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.EncodeCaesarCipherAsync(sentence, Key, IV);
        }
        
        public string DecodeCaesarCipher(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.DecodeCaesarCipher(sentence, Key, IV);
        }
        
        public System.Threading.Tasks.Task<string> DecodeCaesarCipherAsync(string sentence, byte[] Key, byte[] IV) {
            return base.Channel.DecodeCaesarCipherAsync(sentence, Key, IV);
        }
    }
}
